{"version":3,"sources":["reducers/index.js","components/OperationNode.js","containers/ConnectedOperationNode.js","components/InputField.js","containers/ConnectedInputField.js","actions/actions.js","actions/actionTypes.js","components/App.js","index.js"],"names":["initialState","nodes","Nr","Bezeichnung","Dauer","Vorgänger","Nachfolger","FAZ","SAZ","FEZ","SEZ","Position","convertToArray","arrayAlsString","stringAlsArray","idx","index","length","charAt","calculateNachfolger","forEach","node","vorG","push","parseInt","calculateVorgänger","nachV","calculateNodes","reversedNodes","reverse","biggestSEZ","findBiggestSEZ","nachF","calculateSAZSEZ","nextFAZ","calculateFAZFEZ","calculatePositions","idx2","newPosition","Node","data","GP","gridNumber","console","log","className","width","align","colSpan","OperationNode","state","firstColumn","lastColumn","highestColumnPosition","findHighestColumnPosition","map","e","i","key","height","connect","dispatch","InputRow","actions","changeNr","changeBezeichnung","changeDauer","changeVorgänger","changeNachfolger","toString","substring","type","value","onChange","target","defaultValue","InputField","addNode","deleteNode","onClick","payload","array","App","ConnectedInputField","ConnectedOperationNode","store","createStore","action","vorgängerString","nachfolgerString","pop","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6834508c.chunk.js","sourcesContent":["import {\r\n  CHANGE_NR,\r\n  CHANGE_BEZEICHNUNG,\r\n  CHANGE_DAUER,\r\n  CHANGE_VORGÄNGER,\r\n  CHANGE_NACHFOLGER,\r\n  ADD_NODE,\r\n  DELETE_NODE\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  //TODO: ADD FAZ; FEZ; SAZ; SEZ;\r\n  nodes: [\r\n    {\r\n      Nr: 0,\r\n      Bezeichnung: 'Dehnen',\r\n      Dauer: 10,\r\n      Vorgänger: [],\r\n      Nachfolger: [],\r\n      FAZ: 0,\r\n      SAZ: 0,\r\n      FEZ: 0,\r\n      SEZ: 0,\r\n      Position: [1, 1]\r\n    },\r\n    {\r\n      Nr: 1,\r\n      Bezeichnung: 'Laufen',\r\n      Dauer: 30,\r\n      Vorgänger: [],\r\n      Nachfolger: [],\r\n      FAZ: 0,\r\n      SAZ: 0,\r\n      FEZ: 0,\r\n      SEZ: 0,\r\n      Position: [1, 2]\r\n    },\r\n    {\r\n      Nr: 2,\r\n      Bezeichnung: 'Pause',\r\n      Dauer: 5,\r\n      Vorgänger: [],\r\n      Nachfolger: [],\r\n      FAZ: 0,\r\n      SAZ: 0,\r\n      FEZ: 0,\r\n      SEZ: 0,\r\n      Position: [1, 3]\r\n    },\r\n    {\r\n      Nr: 3,\r\n      Bezeichnung: 'Wiederholen',\r\n      Dauer: 200,\r\n      Vorgänger: [],\r\n      Nachfolger: [],\r\n      FAZ: 0,\r\n      SAZ: 0,\r\n      FEZ: 0,\r\n      SEZ: 0,\r\n      Position: [1, 4]\r\n    }\r\n  ]\r\n};\r\n\r\n//TODO: FUNCTION: CALCULATE FAZ; FEZ; SAZ; SEZ;\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    //Macht eigentlich keinen Sinn\r\n    case CHANGE_NR: {\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    case CHANGE_BEZEICHNUNG: {\r\n      let idx = action.payload.idx;\r\n      var Bezeichnung = action.payload.value;\r\n\r\n      let nodes = state.nodes;\r\n      nodes[idx].Bezeichnung = Bezeichnung;\r\n\r\n      return {\r\n        ...state,\r\n        nodes\r\n      };\r\n    }\r\n    case CHANGE_DAUER: {\r\n      let idx = action.payload.idx;\r\n      var Dauer = action.payload.value;\r\n\r\n      let nodes = state.nodes;\r\n      nodes[idx].Dauer = Dauer;\r\n\r\n      nodes = calculateNodes(nodes);\r\n      return {\r\n        ...state,\r\n        nodes\r\n      };\r\n    }\r\n    case CHANGE_VORGÄNGER: {\r\n      let idx = action.payload.idx;\r\n      var vorgängerString = action.payload.array;\r\n      let Vorgänger = convertToArray(vorgängerString);\r\n\r\n      let nodes = state.nodes;\r\n      nodes[idx].Vorgänger = Vorgänger;\r\n\r\n      nodes = calculateNachfolger(nodes);\r\n\r\n      nodes = calculateNodes(nodes);\r\n\r\n      nodes = calculatePositions(nodes);\r\n\r\n      return {\r\n        ...state,\r\n        nodes\r\n      };\r\n    }\r\n    case CHANGE_NACHFOLGER: {\r\n      let idx = action.payload.idx;\r\n      var nachfolgerString = action.payload.array;\r\n      var Nachfolger = convertToArray(nachfolgerString);\r\n\r\n      let nodes = state.nodes;\r\n      nodes[idx].Nachfolger = Nachfolger;\r\n\r\n      nodes = calculateVorgänger(nodes);\r\n\r\n      nodes = calculateNodes(nodes);\r\n\r\n      nodes = calculatePositions(nodes);\r\n      return {\r\n        ...state,\r\n        nodes\r\n      };\r\n    }\r\n    case ADD_NODE: {\r\n      var nodes = state.nodes;\r\n      nodes.push({\r\n        Nr: nodes.length,\r\n        Bezeichnung: '',\r\n        Dauer: 0,\r\n        Vorgänger: [],\r\n        Nachfolger: [],\r\n        FAZ: 0,\r\n        SAZ: 0,\r\n        FEZ: 0,\r\n        SEZ: 0,\r\n        Position: []\r\n      });\r\n      return {\r\n        ...state,\r\n        nodes\r\n      };\r\n    }\r\n    case DELETE_NODE: {\r\n      var nodes = state.nodes;\r\n      nodes.pop();\r\n      return {\r\n        ...state,\r\n        nodes\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nfunction convertToArray(arrayAlsString) {\r\n  var stringAlsArray = [];\r\n  var idx = 0;\r\n  for (var index = 0; index < arrayAlsString.length; index++) {\r\n    if (\r\n      arrayAlsString.charAt(index) >= '0' &&\r\n      arrayAlsString.charAt(index) <= '9'\r\n    ) {\r\n      stringAlsArray[idx] = arrayAlsString.charAt(index);\r\n      idx++;\r\n    }\r\n  }\r\n\r\n  return stringAlsArray;\r\n}\r\n\r\nfunction calculateNachfolger(nodes) {\r\n  nodes.forEach(node => {\r\n    node.Nachfolger = [];\r\n  });\r\n\r\n  nodes.forEach(node => {\r\n    node.Vorgänger.forEach(vorG => {\r\n      nodes[vorG].Nachfolger.push(parseInt(node.Nr));\r\n    });\r\n  });\r\n  return nodes;\r\n}\r\n\r\nfunction calculateVorgänger(nodes) {\r\n  nodes.forEach(node => {\r\n    node.Vorgänger = [];\r\n  });\r\n\r\n  nodes.forEach(node => {\r\n    node.Nachfolger.forEach(nachV => {\r\n      nodes[nachV].Vorgänger.push(parseInt(node.Nr));\r\n    });\r\n  });\r\n  return nodes;\r\n}\r\n\r\nfunction calculateNodes(nodes) {\r\n  nodes = calculateFAZFEZ(nodes);\r\n  nodes = calculateSAZSEZ(nodes);\r\n  return nodes;\r\n}\r\n\r\nfunction calculateFAZFEZ(nodes) {\r\n  nodes.forEach(node => {\r\n    let nextFAZ = 0;\r\n    if (node.Vorgänger.length === 0) {\r\n      node.FAZ = 0;\r\n      node.FEZ = node.Dauer;\r\n    } else {\r\n      node.Vorgänger.forEach(vorG => {\r\n        if (nodes[vorG].FEZ > nextFAZ) {\r\n          nextFAZ = nodes[vorG].FEZ;\r\n        }\r\n      });\r\n      node.FAZ = parseInt(nextFAZ);\r\n      node.FEZ = parseInt(parseInt(nextFAZ) + parseInt(node.Dauer));\r\n    }\r\n  });\r\n  return nodes;\r\n}\r\n\r\n//Confusion Overload\r\nfunction calculateSAZSEZ(nodes) {\r\n  var reversedNodes = nodes;\r\n  reversedNodes.reverse();\r\n\r\n  reversedNodes.forEach(node => {\r\n    node.SAZ = 0;\r\n    node.SEZ = 0;\r\n  });\r\n  reversedNodes.forEach(node => {\r\n    var biggestSEZ = 0;\r\n    if (node.Nachfolger.length === 0) {\r\n      node.SEZ = findBiggestSEZ(nodes);\r\n      if (node.SEZ < node.FEZ) {\r\n        node.SEZ = node.FEZ;\r\n      }\r\n\r\n      node.SAZ = node.SEZ - node.Dauer;\r\n    } else {\r\n      node.Nachfolger.forEach(nachF => {\r\n        if (nodes[nodes.length - nachF - 1].SAZ >= biggestSEZ) {\r\n          biggestSEZ = nodes[nodes.length - nachF - 1].SAZ;\r\n        }\r\n      });\r\n      node.SEZ = biggestSEZ;\r\n      node.SAZ = biggestSEZ - node.Dauer;\r\n    }\r\n  });\r\n\r\n  nodes = reversedNodes.reverse();\r\n  return nodes;\r\n}\r\n\r\nfunction findBiggestSEZ(nodes) {\r\n  var biggestSEZ = 0;\r\n  nodes.forEach(node => {\r\n    if (node.SEZ > biggestSEZ) {\r\n      biggestSEZ = node.SEZ;\r\n    }\r\n  });\r\n  return biggestSEZ;\r\n}\r\n\r\nfunction calculatePositions(nodes) {\r\n  var idx = 0;\r\n  var idx2 = 0;\r\n  nodes.forEach(node => {\r\n    var newPosition = [0, 0];\r\n    if (node.Vorgänger.length == 0) {\r\n      idx++;\r\n      newPosition = [1, idx];\r\n    } else {\r\n      if (nodes[node.Vorgänger[0]].Nachfolger.length == 1) {\r\n        newPosition = [\r\n          nodes[node.Vorgänger[0]].Position[0] + 1,\r\n          nodes[node.Vorgänger[0]].Position[1]\r\n        ];\r\n      } else {\r\n        newPosition = [\r\n          nodes[node.Vorgänger[0]].Position[0] + 1,\r\n          nodes[node.Vorgänger[0]].Position[1] + idx2\r\n        ];\r\n        idx2++;\r\n      }\r\n    }\r\n    node.Position = newPosition;\r\n  });\r\n\r\n  return nodes;\r\n}\r\n\r\nfunction newCalculatePositions(nodes) {\r\n  var idx = 0;\r\n  var idx2 = 0;\r\n  nodes.forEach(node => {\r\n    var newPosition = [0, 0];\r\n    if (node.Vorgänger.length == 0) {\r\n      idx++;\r\n      newPosition = [1, idx];\r\n    } else {\r\n      var vorgängerMitHöchsteSEZNodeNr = 0;\r\n      node.Vorgänger.forEach(vorG => {\r\n        vorgängerMitHöchsteSEZNodeNr = whoHasBiggestSEZ(nodes);\r\n      });\r\n      console.log(nodes[vorgängerMitHöchsteSEZNodeNr].Nr);\r\n      newPosition = [\r\n        nodes[vorgängerMitHöchsteSEZNodeNr].Position[0] + 1,\r\n        nodes[vorgängerMitHöchsteSEZNodeNr].Position[1] + idx2\r\n      ];\r\n      idx2++;\r\n    }\r\n    node.Position = newPosition;\r\n  });\r\n\r\n  return nodes;\r\n}\r\n\r\nfunction whoHasBiggestSEZ(nodes) {\r\n  var biggestSEZ = 0;\r\n  var whoHasNodeNr = 0;\r\n  nodes.forEach(node => {\r\n    if (node.SEZ > biggestSEZ) {\r\n      biggestSEZ = node.SEZ;\r\n      whoHasNodeNr = node.Nr;\r\n    }\r\n  });\r\n  return whoHasNodeNr;\r\n}\r\n","import React from 'react';\r\nimport '../css/App.css';\r\n\r\nconst Node = node => {\r\n  const { Nr, Bezeichnung, Dauer, FAZ, SEZ, FEZ, SAZ, Position } = node.data;\r\n  const GP = SEZ - FEZ;\r\n\r\n  const index = Nr + 1;\r\n  const gridNumber = 'm-5 w-2 elem' + Position[1] + Position[0];\r\n  console.log(gridNumber);\r\n  return (\r\n    <div className={gridNumber}>\r\n      <table className=\"max-w-200 min-w-200 table-fixed\" width=\"350\">\r\n        <tbody>\r\n          <tr>\r\n            <td className=\"border px-12 py-4 bg-red-200 w-100 h-10\">{FAZ}</td>\r\n            <td className=\"border px-12 py-4 bg-green-200 w-100 h-10\">\r\n              {Dauer}\r\n            </td>\r\n            <td\r\n              className=\"border px-4 py-4 bg-blue-200 w-100 h-10\"\r\n              align=\"center\"\r\n            >\r\n              {FEZ}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td\r\n              className=\"border px-12 py-4 bg-gray-200 w-100 h-10\"\r\n              colSpan=\"3\"\r\n              align=\"center\"\r\n            >\r\n              {Bezeichnung}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"border px-12 py-4 bg-red-300 w-100 h-10\">{SAZ}</td>\r\n            <td className=\"border px-12 py-4 bg-green-300 w-100 h-10\">{GP}</td>\r\n            <td className=\"border px-12 py-4 bg-blue-300 w-100 h-10\">{SEZ}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction OperationNode(state) {\r\n  const nodes = state.state.nodes;\r\n  var numberOfRows = 0;\r\n  var firstColumn = [];\r\n  var secondColumn = [];\r\n  var lastColumn = [];\r\n\r\n  nodes.forEach(node => {\r\n    if (node.Nachfolger.length === 0) {\r\n      lastColumn.push(node.Nr);\r\n    }\r\n    if (node.Vorgänger.length === 0) {\r\n      firstColumn.push(node.Nr);\r\n    }\r\n  });\r\n  numberOfRows++;\r\n\r\n  var className = 'container';\r\n\r\n  className += findHighestColumnPosition(nodes);\r\n\r\n  return (\r\n    <div className={className}>\r\n      {nodes.map((e, i) => (\r\n        <Node key={i} data={e} />\r\n      ))}\r\n      <svg width=\"500\" height=\"500\"></svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction findHighestColumnPosition(nodes) {\r\n  var highestColumnPosition = 1;\r\n  nodes.forEach(node => {\r\n    if (node.Position[0] > highestColumnPosition) {\r\n      highestColumnPosition = node.Position[0];\r\n    }\r\n  });\r\n  console.log(highestColumnPosition);\r\n  return highestColumnPosition;\r\n}\r\n\r\nexport default OperationNode;\r\n","import { connect } from 'react-redux';\r\nimport OperationNode from '../components/OperationNode.js';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatch\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OperationNode);\r\n","import React from 'react';\r\nimport '../css/input.css';\r\n\r\nconst InputRow = ({ data, actions }) => {\r\n  //console.log(state);\r\n\r\n  const { Nr, Bezeichnung, Dauer, Vorgänger, Nachfolger } = data;\r\n  const {\r\n    changeNr,\r\n    changeBezeichnung,\r\n    changeDauer,\r\n    changeVorgänger,\r\n    changeNachfolger\r\n  } = actions;\r\n\r\n  var vorG = '';\r\n  var nachV = '';\r\n  Vorgänger.forEach(e => {\r\n    vorG += e.toString() + ', ';\r\n  });\r\n  Nachfolger.forEach(e => {\r\n    nachV += e.toString() + ', ';\r\n  });\r\n\r\n  vorG = vorG.substring(0, vorG.length - 2);\r\n  nachV = nachV.substring(0, nachV.length - 2);\r\n\r\n  return (\r\n    <div className=\"tr\">\r\n      <span className=\"td\">\r\n        <input\r\n          type=\"text\"\r\n          value={Nr}\r\n          onChange={e => changeNr(e.target.value, Nr)}\r\n        ></input>\r\n      </span>\r\n      <span className=\"td\">\r\n        <input\r\n          type=\"text\"\r\n          defaultValue={Bezeichnung}\r\n          onChange={e => changeBezeichnung(e.target.value, Nr)}\r\n        ></input>\r\n      </span>\r\n      <span className=\"td\">\r\n        <input\r\n          type=\"text\"\r\n          defaultValue={Dauer}\r\n          onChange={e => changeDauer(e.target.value, Nr)}\r\n        ></input>\r\n      </span>\r\n      <span className=\"td\">\r\n        <input\r\n          type=\"text\"\r\n          defaultValue={vorG}\r\n          onChange={e => changeVorgänger(e.target.value, Nr)}\r\n        ></input>\r\n      </span>\r\n      <span className=\"td\">\r\n        <input\r\n          type=\"text\"\r\n          defaultValue={nachV}\r\n          onChange={e => changeNachfolger(e.target.value, Nr)}\r\n        ></input>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction InputField({\r\n  state,\r\n  changeNr,\r\n  changeBezeichnung,\r\n  changeDauer,\r\n  changeVorgänger,\r\n  changeNachfolger,\r\n  addNode,\r\n  deleteNode\r\n}) {\r\n  var nodes = state.nodes;\r\n  const actions = {\r\n    changeNr,\r\n    changeBezeichnung,\r\n    changeDauer,\r\n    changeVorgänger,\r\n    changeNachfolger\r\n  };\r\n  return (\r\n    <div className=\"table\">\r\n      <div>\r\n        <div className=\"tr\">\r\n          <span className=\"td\">Nr.</span>\r\n          <span className=\"td\">Bezeichung</span>\r\n          <span className=\"td\">Dauer</span>\r\n          <span className=\"td\">Vorgänger</span>\r\n          <span className=\"td\">Nachfolger</span>\r\n        </div>\r\n        {nodes.map((e, i) => (\r\n          <InputRow key={i} data={e} actions={actions} />\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"button\"\r\n        className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded m-2\"\r\n        value=\"Add Node\"\r\n        onClick={addNode}\r\n      ></input>\r\n      <input\r\n        type=\"button\"\r\n        className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded m-2\"\r\n        value=\"Delete Node\"\r\n        onClick={deleteNode}\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputField;\r\n","import { connect } from 'react-redux';\r\nimport InputField from '../components/InputField.js';\r\nimport {\r\n  changeNr,\r\n  changeBezeichnung,\r\n  changeDauer,\r\n  changeVorgänger,\r\n  changeNachfolger,\r\n  addNode,\r\n  deleteNode\r\n} from '../actions/actions.js';\r\n\r\nconst mapStateToProps = state => ({\r\n  state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeNr: (value, idx) => dispatch(changeNr(value, idx)),\r\n  changeBezeichnung: (value, idx) => dispatch(changeBezeichnung(value, idx)),\r\n  changeDauer: (value, idx) => dispatch(changeDauer(value, idx)),\r\n  changeVorgänger: (array, idx) => dispatch(changeVorgänger(array, idx)),\r\n  changeNachfolger: (array, idx) => dispatch(changeNachfolger(array, idx)),\r\n  addNode: () => dispatch(addNode()),\r\n  deleteNode: () => dispatch(deleteNode())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputField);\r\n","import {\r\n  CHANGE_NR,\r\n  CHANGE_BEZEICHNUNG,\r\n  CHANGE_DAUER,\r\n  CHANGE_VORGÄNGER,\r\n  CHANGE_NACHFOLGER,\r\n  ADD_NODE,\r\n  DELETE_NODE\r\n} from './actionTypes';\r\n\r\nexport const addNode = () => ({\r\n  type: ADD_NODE\r\n});\r\n\r\nexport const deleteNode = () => ({\r\n  type: DELETE_NODE\r\n});\r\n\r\nexport const changeNr = (value, idx) => ({\r\n  type: CHANGE_NR,\r\n  payload: { value, idx }\r\n});\r\n\r\nexport const changeBezeichnung = (value, idx) => ({\r\n  type: CHANGE_BEZEICHNUNG,\r\n  payload: { value, idx }\r\n});\r\n\r\nexport const changeDauer = (value, idx) => ({\r\n  type: CHANGE_DAUER,\r\n  payload: { value, idx }\r\n});\r\n\r\nexport const changeVorgänger = (array, idx) => ({\r\n  type: CHANGE_VORGÄNGER,\r\n  payload: { array, idx }\r\n});\r\n\r\nexport const changeNachfolger = (array, idx) => ({\r\n  type: CHANGE_NACHFOLGER,\r\n  payload: { array, idx }\r\n});\r\n","export const CHANGE_BEZEICHNUNG = 'CHANGE_BEZEICHNUNG';\r\nexport const CHANGE_DAUER = 'CHANGE_DAUER';\r\nexport const CHANGE_VORGÄNGER = 'CHANGE_VORGÄNGER';\r\nexport const CHANGE_NACHFOLGER = 'CHANGE_NACHFOLGER';\r\nexport const CHANGE_NR = 'CHANGE_NR';\r\n\r\nexport const ADD_NODE = 'ADD_NODE';\r\nexport const DELETE_NODE = 'DELETE_NODE';\r\n","import React from 'react';\nimport ConnectedOperationNode from '../containers/ConnectedOperationNode';\nimport ConnectedInputField from '../containers/ConnectedInputField';\n\nfunction App() {\n  return (\n    <div>\n      <ConnectedInputField />\n      <ConnectedOperationNode />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers/index';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport './css/output.css';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}