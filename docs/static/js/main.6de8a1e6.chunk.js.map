{"version":3,"sources":["reducers/index.js","components/OperationNode.js","containers/ConnectedOperationNode.js","components/InputField.js","containers/ConnectedInputField.js","actions/actions.js","actions/actionTypes.js","components/App.js","index.js"],"names":["convertToArray","arrayAlsString","stringAlsArray","idx","index","length","charAt","calculateNachfolger","nodes","forEach","node","Nachfolger","Vorgänger","vorG","push","parseInt","Nr","calculateVorgänger","nachV","calculateNodes","reversedNodes","reverse","SAZ","SEZ","biggestSEZ","findBiggestSEZ","FEZ","Dauer","nachF","calculateSAZSEZ","nextFAZ","FAZ","calculateFAZFEZ","calculatePositions","idx2","newPosition","Position","exportFile","file","filename","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","exportAsCSV","a","ObjectsToCsv","require","toString","Node","data","Bezeichnung","GP","gridNumber","className","width","align","colSpan","OperationNode","state","firstColumn","lastColumn","highestColumnPosition","findHighestColumnPosition","map","e","i","key","height","connect","dispatch","InputRow","actions","changeNr","changeBezeichnung","changeDauer","changeVorgänger","changeNachfolger","substring","type","value","onChange","target","defaultValue","InputField","addNode","deleteNode","downloadJSON","downloadCSV","onClick","payload","array","App","ConnectedInputField","ConnectedOperationNode","store","createStore","action","vorgängerString","nachfolgerString","pop","stringToJson","JSON","stringify","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6de8a1e6.chunk.js","sourcesContent":["import {\r\n  CHANGE_NR,\r\n  CHANGE_BEZEICHNUNG,\r\n  CHANGE_DAUER,\r\n  CHANGE_VORGÄNGER,\r\n  CHANGE_NACHFOLGER,\r\n  ADD_NODE,\r\n  DELETE_NODE,\r\n  DOWNLOAD_JSON,\r\n  DOWNLOAD_CSV\r\n} from '../actions/actionTypes';\r\n\r\nexport default function(state = require('./initState.json'), action) {\r\n  switch (action.type) {\r\n    //Macht eigentlich keinen Sinn\r\n    case CHANGE_NR: {\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    case CHANGE_BEZEICHNUNG: {\r\n      let idx = action.payload.idx;\r\n      var Bezeichnung = action.payload.value;\r\n\r\n      let nodes = state.nodes;\r\n      nodes[idx].Bezeichnung = Bezeichnung;\r\n\r\n      return {\r\n        ...state,\r\n        nodes\r\n      };\r\n    }\r\n    case CHANGE_DAUER: {\r\n      let idx = action.payload.idx;\r\n      var Dauer = action.payload.value;\r\n\r\n      let nodes = state.nodes;\r\n      nodes[idx].Dauer = Dauer;\r\n\r\n      nodes = calculateNodes(nodes);\r\n      return {\r\n        ...state,\r\n        nodes\r\n      };\r\n    }\r\n    case CHANGE_VORGÄNGER: {\r\n      let idx = action.payload.idx;\r\n      var vorgängerString = action.payload.array;\r\n      let Vorgänger = convertToArray(vorgängerString);\r\n\r\n      let nodes = state.nodes;\r\n      nodes[idx].Vorgänger = Vorgänger;\r\n\r\n      nodes = calculateNachfolger(nodes);\r\n\r\n      nodes = calculateNodes(nodes);\r\n\r\n      nodes = calculatePositions(nodes);\r\n\r\n      return {\r\n        ...state,\r\n        nodes\r\n      };\r\n    }\r\n    case CHANGE_NACHFOLGER: {\r\n      let idx = action.payload.idx;\r\n      var nachfolgerString = action.payload.array;\r\n      var Nachfolger = convertToArray(nachfolgerString);\r\n\r\n      let nodes = state.nodes;\r\n      nodes[idx].Nachfolger = Nachfolger;\r\n\r\n      nodes = calculateVorgänger(nodes);\r\n\r\n      nodes = calculateNodes(nodes);\r\n\r\n      nodes = calculatePositions(nodes);\r\n      return {\r\n        ...state,\r\n        nodes\r\n      };\r\n    }\r\n    case ADD_NODE: {\r\n      var nodes = state.nodes;\r\n      nodes.push({\r\n        Nr: nodes.length,\r\n        Bezeichnung: '',\r\n        Dauer: 0,\r\n        Vorgänger: [],\r\n        Nachfolger: [],\r\n        FAZ: 0,\r\n        SAZ: 0,\r\n        FEZ: 0,\r\n        SEZ: 0,\r\n        Position: []\r\n      });\r\n      return {\r\n        ...state,\r\n        nodes\r\n      };\r\n    }\r\n    case DELETE_NODE: {\r\n      var nodes = state.nodes;\r\n      nodes.pop();\r\n      return {\r\n        ...state,\r\n        nodes\r\n      };\r\n    }\r\n    case DOWNLOAD_JSON: {\r\n      var nodes = state.nodes;\r\n      var stringToJson = JSON.stringify(nodes);\r\n      exportFile(stringToJson, 'data.json');\r\n\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    case DOWNLOAD_CSV: {\r\n      var nodes = state.nodes;\r\n      exportAsCSV(nodes);\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nfunction convertToArray(arrayAlsString) {\r\n  var stringAlsArray = [];\r\n  var idx = 0;\r\n  for (var index = 0; index < arrayAlsString.length; index++) {\r\n    if (\r\n      arrayAlsString.charAt(index) >= '0' &&\r\n      arrayAlsString.charAt(index) <= '9'\r\n    ) {\r\n      stringAlsArray[idx] = arrayAlsString.charAt(index);\r\n      idx++;\r\n    }\r\n  }\r\n\r\n  return stringAlsArray;\r\n}\r\n\r\nfunction calculateNachfolger(nodes) {\r\n  nodes.forEach(node => {\r\n    node.Nachfolger = [];\r\n  });\r\n\r\n  nodes.forEach(node => {\r\n    node.Vorgänger.forEach(vorG => {\r\n      nodes[vorG].Nachfolger.push(parseInt(node.Nr));\r\n    });\r\n  });\r\n  return nodes;\r\n}\r\n\r\nfunction calculateVorgänger(nodes) {\r\n  nodes.forEach(node => {\r\n    node.Vorgänger = [];\r\n  });\r\n\r\n  nodes.forEach(node => {\r\n    node.Nachfolger.forEach(nachV => {\r\n      nodes[nachV].Vorgänger.push(parseInt(node.Nr));\r\n    });\r\n  });\r\n  return nodes;\r\n}\r\n\r\nfunction calculateNodes(nodes) {\r\n  nodes = calculateFAZFEZ(nodes);\r\n  nodes = calculateSAZSEZ(nodes);\r\n  return nodes;\r\n}\r\n\r\nfunction calculateFAZFEZ(nodes) {\r\n  nodes.forEach(node => {\r\n    let nextFAZ = 0;\r\n    if (node.Vorgänger.length === 0) {\r\n      node.FAZ = 0;\r\n      node.FEZ = node.Dauer;\r\n    } else {\r\n      node.Vorgänger.forEach(vorG => {\r\n        if (nodes[vorG].FEZ > nextFAZ) {\r\n          nextFAZ = nodes[vorG].FEZ;\r\n        }\r\n      });\r\n      node.FAZ = parseInt(nextFAZ);\r\n      node.FEZ = parseInt(parseInt(nextFAZ) + parseInt(node.Dauer));\r\n    }\r\n  });\r\n  return nodes;\r\n}\r\n\r\n//Confusion Overload\r\nfunction calculateSAZSEZ(nodes) {\r\n  var reversedNodes = nodes;\r\n  reversedNodes.reverse();\r\n\r\n  reversedNodes.forEach(node => {\r\n    node.SAZ = 0;\r\n    node.SEZ = 0;\r\n  });\r\n  reversedNodes.forEach(node => {\r\n    var biggestSEZ = 0;\r\n    if (node.Nachfolger.length === 0) {\r\n      node.SEZ = findBiggestSEZ(nodes);\r\n      if (node.SEZ < node.FEZ) {\r\n        node.SEZ = node.FEZ;\r\n      }\r\n\r\n      node.SAZ = node.SEZ - node.Dauer;\r\n    } else {\r\n      node.Nachfolger.forEach(nachF => {\r\n        if (nodes[nodes.length - nachF - 1].SAZ >= biggestSEZ) {\r\n          biggestSEZ = nodes[nodes.length - nachF - 1].SAZ;\r\n        }\r\n      });\r\n      node.SEZ = biggestSEZ;\r\n      node.SAZ = biggestSEZ - node.Dauer;\r\n    }\r\n  });\r\n\r\n  nodes = reversedNodes.reverse();\r\n  return nodes;\r\n}\r\n\r\nfunction findBiggestSEZ(nodes) {\r\n  var biggestSEZ = 0;\r\n  nodes.forEach(node => {\r\n    if (node.SEZ > biggestSEZ) {\r\n      biggestSEZ = node.SEZ;\r\n    }\r\n  });\r\n  return biggestSEZ;\r\n}\r\n\r\nfunction calculatePositions(nodes) {\r\n  var idx = 0;\r\n  var idx2 = 0;\r\n  nodes.forEach(node => {\r\n    var newPosition = [0, 0];\r\n    if (node.Vorgänger.length == 0) {\r\n      idx++;\r\n      newPosition = [1, idx];\r\n    } else {\r\n      if (nodes[node.Vorgänger[0]].Nachfolger.length == 1) {\r\n        newPosition = [\r\n          nodes[node.Vorgänger[0]].Position[0] + 1,\r\n          nodes[node.Vorgänger[0]].Position[1]\r\n        ];\r\n      } else {\r\n        newPosition = [\r\n          nodes[node.Vorgänger[0]].Position[0] + 1,\r\n          nodes[node.Vorgänger[0]].Position[1] + idx2\r\n        ];\r\n        idx2++;\r\n      }\r\n    }\r\n    node.Position = newPosition;\r\n  });\r\n\r\n  return nodes;\r\n}\r\n\r\nfunction exportFile(file, filename) {\r\n  var element = document.createElement('a');\r\n  element.setAttribute(\r\n    'href',\r\n    'data:text/plain;charset=utf-8,' + encodeURIComponent(file)\r\n  );\r\n  element.setAttribute('download', filename);\r\n\r\n  element.style.display = 'none';\r\n  document.body.appendChild(element);\r\n\r\n  element.click();\r\n\r\n  document.body.removeChild(element);\r\n}\r\n\r\nasync function exportAsCSV(nodes) {\r\n  const ObjectsToCsv = require('objects-to-csv');\r\n  return exportFile(await new ObjectsToCsv(nodes).toString(), 'data.csv');\r\n}\r\n","import React from 'react';\r\nimport '../css/App.css';\r\n\r\nconst Node = node => {\r\n  const { Nr, Bezeichnung, Dauer, FAZ, SEZ, FEZ, SAZ, Position } = node.data;\r\n  const GP = SEZ - FEZ;\r\n\r\n  const index = Nr + 1;\r\n  const gridNumber = 'm-5 w-2 elem' + Position[1] + Position[0];\r\n  return (\r\n    <div className={gridNumber}>\r\n      <table className=\"max-w-200 min-w-200 table-fixed\" width=\"350\">\r\n        <tbody>\r\n          <tr>\r\n            <td className=\"border px-12 py-4 bg-red-200 w-100 h-10\">{FAZ}</td>\r\n            <td className=\"border px-12 py-4 bg-green-200 w-100 h-10\">\r\n              {Dauer}\r\n            </td>\r\n            <td\r\n              className=\"border px-4 py-4 bg-blue-200 w-100 h-10\"\r\n              align=\"center\"\r\n            >\r\n              {FEZ}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td\r\n              className=\"border px-12 py-4 bg-gray-200 w-100 h-10\"\r\n              colSpan=\"3\"\r\n              align=\"center\"\r\n            >\r\n              {Bezeichnung}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"border px-12 py-4 bg-red-300 w-100 h-10\">{SAZ}</td>\r\n            <td className=\"border px-12 py-4 bg-green-300 w-100 h-10\">{GP}</td>\r\n            <td className=\"border px-12 py-4 bg-blue-300 w-100 h-10\">{SEZ}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction OperationNode(state) {\r\n  const nodes = state.state.nodes;\r\n  var numberOfRows = 0;\r\n  var firstColumn = [];\r\n  var secondColumn = [];\r\n  var lastColumn = [];\r\n\r\n  nodes.forEach(node => {\r\n    if (node.Nachfolger.length === 0) {\r\n      lastColumn.push(node.Nr);\r\n    }\r\n    if (node.Vorgänger.length === 0) {\r\n      firstColumn.push(node.Nr);\r\n    }\r\n  });\r\n  numberOfRows++;\r\n\r\n  var className = 'container';\r\n\r\n  className += findHighestColumnPosition(nodes);\r\n\r\n  return (\r\n    <div className={className}>\r\n      {nodes.map((e, i) => (\r\n        <Node key={i} data={e} />\r\n      ))}\r\n      <svg width=\"500\" height=\"500\"></svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction findHighestColumnPosition(nodes) {\r\n  var highestColumnPosition = 1;\r\n  nodes.forEach(node => {\r\n    if (node.Position[0] > highestColumnPosition) {\r\n      highestColumnPosition = node.Position[0];\r\n    }\r\n  });\r\n  return highestColumnPosition;\r\n}\r\n\r\nexport default OperationNode;\r\n","import { connect } from 'react-redux';\r\nimport OperationNode from '../components/OperationNode.js';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatch\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OperationNode);\r\n","import React from 'react';\r\nimport '../css/input.css';\r\n\r\nconst InputRow = ({ data, actions }) => {\r\n  //console.log(state);\r\n\r\n  const { Nr, Bezeichnung, Dauer, Vorgänger, Nachfolger } = data;\r\n  const {\r\n    changeNr,\r\n    changeBezeichnung,\r\n    changeDauer,\r\n    changeVorgänger,\r\n    changeNachfolger\r\n  } = actions;\r\n\r\n  var vorG = '';\r\n  var nachV = '';\r\n  Vorgänger.forEach(e => {\r\n    vorG += e.toString() + ', ';\r\n  });\r\n  Nachfolger.forEach(e => {\r\n    nachV += e.toString() + ', ';\r\n  });\r\n\r\n  vorG = vorG.substring(0, vorG.length - 2);\r\n  nachV = nachV.substring(0, nachV.length - 2);\r\n\r\n  return (\r\n    <div className=\"tr\">\r\n      <span className=\"td\">\r\n        <input\r\n          type=\"text\"\r\n          value={Nr}\r\n          onChange={e => changeNr(e.target.value, Nr)}\r\n        ></input>\r\n      </span>\r\n      <span className=\"td\">\r\n        <input\r\n          type=\"text\"\r\n          defaultValue={Bezeichnung}\r\n          onChange={e => changeBezeichnung(e.target.value, Nr)}\r\n        ></input>\r\n      </span>\r\n      <span className=\"td\">\r\n        <input\r\n          type=\"text\"\r\n          defaultValue={Dauer}\r\n          onChange={e => changeDauer(e.target.value, Nr)}\r\n        ></input>\r\n      </span>\r\n      <span className=\"td\">\r\n        <input\r\n          type=\"text\"\r\n          defaultValue={vorG}\r\n          onChange={e => changeVorgänger(e.target.value, Nr)}\r\n        ></input>\r\n      </span>\r\n      <span className=\"td\">\r\n        <input\r\n          type=\"text\"\r\n          defaultValue={nachV}\r\n          onChange={e => changeNachfolger(e.target.value, Nr)}\r\n        ></input>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction InputField({\r\n  state,\r\n  changeNr,\r\n  changeBezeichnung,\r\n  changeDauer,\r\n  changeVorgänger,\r\n  changeNachfolger,\r\n  addNode,\r\n  deleteNode,\r\n  downloadJSON,\r\n  downloadCSV\r\n}) {\r\n  var nodes = state.nodes;\r\n  const actions = {\r\n    changeNr,\r\n    changeBezeichnung,\r\n    changeDauer,\r\n    changeVorgänger,\r\n    changeNachfolger,\r\n    downloadJSON,\r\n    downloadCSV\r\n  };\r\n  return (\r\n    <div className=\"table\">\r\n      <div>\r\n        <div className=\"tr\">\r\n          <span className=\"td\">Nr.</span>\r\n          <span className=\"td\">Bezeichung</span>\r\n          <span className=\"td\">Dauer</span>\r\n          <span className=\"td\">Vorgänger</span>\r\n          <span className=\"td\">Nachfolger</span>\r\n        </div>\r\n        {nodes.map((e, i) => (\r\n          <InputRow key={i} data={e} actions={actions} />\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"button\"\r\n        className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded m-2\"\r\n        value=\"Add Node\"\r\n        onClick={addNode}\r\n      ></input>\r\n      <input\r\n        type=\"button\"\r\n        className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded m-2\"\r\n        value=\"Delete Node\"\r\n        onClick={deleteNode}\r\n      ></input>\r\n      <input\r\n        type=\"button\"\r\n        className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded m-2\"\r\n        value=\"Download JSON\"\r\n        onClick={downloadJSON}\r\n      ></input>\r\n      <input\r\n        type=\"button\"\r\n        className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded m-2\"\r\n        value=\"Download CSV\"\r\n        onClick={downloadCSV}\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputField;\r\n","import { connect } from 'react-redux';\r\nimport InputField from '../components/InputField.js';\r\nimport {\r\n  changeNr,\r\n  changeBezeichnung,\r\n  changeDauer,\r\n  changeVorgänger,\r\n  changeNachfolger,\r\n  addNode,\r\n  deleteNode,\r\n  downloadJSON,\r\n  downloadCSV\r\n} from '../actions/actions.js';\r\n\r\nconst mapStateToProps = state => ({\r\n  state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeNr: (value, idx) => dispatch(changeNr(value, idx)),\r\n  changeBezeichnung: (value, idx) => dispatch(changeBezeichnung(value, idx)),\r\n  changeDauer: (value, idx) => dispatch(changeDauer(value, idx)),\r\n  changeVorgänger: (array, idx) => dispatch(changeVorgänger(array, idx)),\r\n  changeNachfolger: (array, idx) => dispatch(changeNachfolger(array, idx)),\r\n  addNode: () => dispatch(addNode()),\r\n  deleteNode: () => dispatch(deleteNode()),\r\n  downloadJSON: () => dispatch(downloadJSON()),\r\n  downloadCSV: () => dispatch(downloadCSV())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputField);\r\n","import {\r\n  CHANGE_NR,\r\n  CHANGE_BEZEICHNUNG,\r\n  CHANGE_DAUER,\r\n  CHANGE_VORGÄNGER,\r\n  CHANGE_NACHFOLGER,\r\n  ADD_NODE,\r\n  DELETE_NODE,\r\n  DOWNLOAD_JSON,\r\n  DOWNLOAD_CSV\r\n} from './actionTypes';\r\n\r\nexport const addNode = () => ({\r\n  type: ADD_NODE\r\n});\r\n\r\nexport const deleteNode = () => ({\r\n  type: DELETE_NODE\r\n});\r\n\r\nexport const changeNr = (value, idx) => ({\r\n  type: CHANGE_NR,\r\n  payload: { value, idx }\r\n});\r\n\r\nexport const changeBezeichnung = (value, idx) => ({\r\n  type: CHANGE_BEZEICHNUNG,\r\n  payload: { value, idx }\r\n});\r\n\r\nexport const changeDauer = (value, idx) => ({\r\n  type: CHANGE_DAUER,\r\n  payload: { value, idx }\r\n});\r\n\r\nexport const changeVorgänger = (array, idx) => ({\r\n  type: CHANGE_VORGÄNGER,\r\n  payload: { array, idx }\r\n});\r\n\r\nexport const changeNachfolger = (array, idx) => ({\r\n  type: CHANGE_NACHFOLGER,\r\n  payload: { array, idx }\r\n});\r\n\r\nexport const downloadJSON = () => ({\r\n  type: DOWNLOAD_JSON\r\n});\r\n\r\nexport const downloadCSV = () => ({\r\n  type: DOWNLOAD_CSV\r\n});\r\n","export const CHANGE_BEZEICHNUNG = 'CHANGE_BEZEICHNUNG';\r\nexport const CHANGE_DAUER = 'CHANGE_DAUER';\r\nexport const CHANGE_VORGÄNGER = 'CHANGE_VORGÄNGER';\r\nexport const CHANGE_NACHFOLGER = 'CHANGE_NACHFOLGER';\r\nexport const CHANGE_NR = 'CHANGE_NR';\r\n\r\nexport const ADD_NODE = 'ADD_NODE';\r\nexport const DELETE_NODE = 'DELETE_NODE';\r\nexport const DOWNLOAD_JSON = 'DOWNLOAD_JSON';\r\nexport const DOWNLOAD_CSV = 'DOWNLOAD_CSV';\r\n","import React from 'react';\nimport ConnectedOperationNode from '../containers/ConnectedOperationNode';\nimport ConnectedInputField from '../containers/ConnectedInputField';\n\nfunction App() {\n  return (\n    <div>\n      <ConnectedInputField />\n      <ConnectedOperationNode />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers/index';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport './css/output.css';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}